[
  {
    "path": "posts/2023-02-04-value/",
    "title": "value",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Hans Jakob Leiter Prossliner",
        "url": {}
      }
    ],
    "date": "2023-02-04",
    "categories": [],
    "contents": "\n\n\nvalue_analysis_prep <- df_generation %>% \n  mutate(quantity = if_else(!is.na(outbiddingzone_domain_mrid), -quantity, quantity)) %>% \n  select(start, source = resource_psr_type_def, quantity) %>% \n  left_join(df_prices %>% select(dt, price), by = c(\"start\" = \"dt\")) %>% \n  mutate(revenue = quantity * price) %>% \n  filter(quantity != 0)\n\n\nvalue_analysis_daily <- \n  value_analysis_prep %>% \n  group_by(date = date(start), source) %>% \n  summarise(\n    total_prod = sum(quantity), \n    total_revenue = sum(revenue),\n    normalized_revenue = total_revenue/total_prod,\n    tobaseline = normalized_revenue/mean(price),\n    ) %>% \n  ungroup() %>% \n  group_by(date) %>% \n  mutate(\n    total_aggr_prod = sum(total_prod),\n    share = round(total_prod/total_aggr_prod, 4)\n  )\n\n\n\n\np1 <- value_analysis_daily %>% \n  ungroup() %>% \n  select(date, source, tobaseline) %>% \n  filter(source != \"Hydro Pumped Storage\") %>% \n  ggplot(aes(date, tobaseline, color = source, group = source))+\n  geom_line()+\n  theme_bw()+\n  scale_color_viridis_d()\n\nplotly::ggplotly(p1)\n\n\n\n\n\nvalue_analysis_yearly <- \n  value_analysis_prep %>% \n  group_by(year = year(start), source) %>% \n  summarise(\n    total_prod = sum(quantity), \n    total_revenue = sum(revenue),\n    normalized_revenue = total_revenue/total_prod,\n    tobaseline = normalized_revenue/mean(price),\n  ) %>% \n  ungroup() %>% \n  group_by(year) %>% \n  mutate(\n    total_aggr_prod = sum(total_prod),\n    share = round(total_prod/total_aggr_prod, 4)\n  ) %>% \n  ungroup() %>% \n  mutate(across(where(is.numeric), round, digits = 2)) %>% \n  select(year, source, value_factor = tobaseline, share) %>% \n  arrange(source, year)\n\nvalue_analysis_yearly\n\n# A tibble: 91 × 4\n    year source                  value_factor share\n   <dbl> <chr>                          <dbl> <dbl>\n 1  2016 Biomass                         0.99  0.01\n 2  2017 Biomass                         1.01  0.01\n 3  2018 Biomass                         0.99  0.01\n 4  2019 Biomass                         1     0.01\n 5  2020 Biomass                         1.01  0.01\n 6  2021 Biomass                         1     0.02\n 7  2022 Biomass                         0.99  0.02\n 8  2023 Biomass                         1     0.02\n 9  2018 Fossil Coal-derived gas         1     0   \n10  2019 Fossil Coal-derived gas         1     0   \n# … with 81 more rows\n\n\n\n\n",
    "preview": {},
    "last_modified": "2023-02-04T16:47:16+01:00",
    "input_file": "value.knit.md"
  },
  {
    "path": "posts/2023-01-29-load-duration-curve/",
    "title": "load duration curve",
    "description": "visualization of Load duration curves.",
    "author": [],
    "date": "2023-01-29",
    "categories": [],
    "contents": "\n\n\n## compare countries\n\nzones <- c(\n  \"10YCH-SWISSGRIDZ\", \"10YAT-APG------L\",\n  \"10Y1001A1001A82H\", \"10Y1001A1001A73I\"\n)\n\ntoken <- keyring::key_get(\"entsoe\")\n\nload <-\n  map_df(\n    zones,\n    ~ en_load_actual_total_load(\n      eic = .x,\n      period_start = \"2022-01-01\",\n      period_end = \"2022-12-21\",\n      security_token = token\n    )\n  )\n\n\nmean_quantity <- load |>\n  group_by(out_bidding_zone) |> \n  summarise(mean_quantity = mean(quantity))\n\n\nPlot Load duration curves for selected bidding zones\n\n\nload |>\n  filter(quantity < 150000) |> \n  group_by(out_bidding_zone) |>\n  summarise_by_time(dt, .by = \"hour\", quantity = mean(quantity)) |> \n  arrange(desc(quantity)) |> \n  mutate(rn = row_number()) |>\n  left_join(mean_quantity, by = \"out_bidding_zone\") |> \n  left_join(en_eic() |> filter(AreaTypeCode == \"BZN\"), by = c(\"out_bidding_zone\" = \"AreaCode\")) |> \n  mutate(quantity = quantity / mean_quantity) |>\n  ggplot(aes(rn, quantity, color = AreaName, group = AreaName)) +\n  geom_line() +\n  geom_hline(yintercept = 1)+\n  theme_bw()\n\n\n\n\n\n\n",
    "preview": "posts/2023-01-29-load-duration-curve/load-duration-curve_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2023-01-29T21:20:53+01:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "powerpulse",
    "description": "Distill blog",
    "author": [
      {
        "name": "Hans Jakob Leiter Prossliner",
        "url": {}
      }
    ],
    "date": "2023-01-29",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2023-01-29T21:10:44+01:00",
    "input_file": {}
  }
]
